//import java.awt.JavaGridLayout;
//import java.awt.BorderLayout;
//import java.io.*;
//import java.awt.JavaPanel;
//import java.awt.JavaButton;
//import java.awt.Font;
//import java.awt.event.*;
//import java.lang.Integer;
using System;

public class ActionEvent
{
    /*
     * extends AWTEvent
A semantic event which indicates that a component-defined action occurred. 
This high-level event is generated by a component (such as a Button) when the component-specific action occurs 
(such as being pressed). 
The event is passed to every ActionListener object that registered to receive such events using the component's 
addActionListener method.
Note: To invoke an ActionEvent on a Button using the keyboard, use the Space bar.

The object that implements the ActionListener interface gets this ActionEvent when the event occurs. 
The listener is therefore spared the details of processing individual mouse movements and mouse clicks, 
and can instead process a "meaningful" (semantic) event like "button pressed".

An unspecified behavior will be caused if the id parameter of any particular ActionEvent instance is not in the range 
from ACTION_FIRST to ACTION_LAST.

[...]
Methods 
Modifier and Type	Method and Description
String	getActionCommand()
Returns the command string associated with this action.
[...]
     */

    string actionCommand = "";

    internal string getActionCommand()
    {
        return actionCommand;
    }

    internal void setActionCommand(string command)
    {
        actionCommand = command;
    }
}